{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://o19s.github.io/ubi/schema/event.schema.json",
  "title": "Event",
  "description": "An event that occurred, typically in response to a user.  See [schemas.md](https://github.com/o19s/opensearch-ubi/blob/2.14.0/documentation/schemas.md) and [events-mapping.json](https://github.com/o19s/opensearch-ubi/blob/2.14.0/src/main/resources/events-mapping.json) for more info.",
  "type": "object",
  "required": ["action_name", "query_id", "timestamp"],
  "properties": {
    "application": {
      "description": "name of the application tracking UBI events.",
      "type": "string",
      "examples": [
          "amazon-shop",
          "ABC-microservice",
          "doctor-search"
      ]
    },
    "action_name": {
      "description": "The name of the action that triggered the event.  We have a set of common defaults, however you can pass in whatever you want.",
      "oneOf": [
        {
          "type": "string",
          "enum": ["click_through", "add_to_cart"]
        },
        {
          "type": "string"
        }
      ]
    },
    "query_id": {
      "description": "The unique identifier of a query, typically a UUID, but can be any string.",
      "oneOf": [
        {
          "type": "string",
          "format": "uuid",
          "examples": ["00112233-4455-6677-8899-aabbccddeeff"]
        },
        {
          "type": "string",
          "examples": ["1234-user-5678"]
        }
      ]
    },
    "timestamp": {
      "description": "When the event took place.",
      "type": "string",
      "format": "date-time",
      "examples": ["2018-11-13T20:20:39+00:00"]
    },
    "message_type": {
      "description": "Group various `action_name`'s into logical bins.",
      "type": "string",
      "examples": ["QUERY", "CONVERSION"],
      "$comment": "TDB: action_type?  event_type?  Should the front end even define this?"
    },
    "message": {
      "description": "Optional text message for the log entry. For example, for a message_type of QUERY, we would expect the text to be about what the user is searching on.",
      "type": "string"
    },
    "event_attributes": {
      "description": "Extensible details about a specific event.",
      "type": "object",
      "properties": {
        "object": {
          "description": "Structure which contains identifying information of the object returned from the query that the user interacts with (i.e.: a book, a product, a post, etc..).",
          "type": "object",
          "additionalProperties": true,
          "required": ["object_id"],
          "properties": {
            "object_id": {
              "description": "The id that a user could look up and find the object instance within the *document corpus*.  Examples include: _ssn_, _isbn_, _ean_, etc. Variants need to be incorporated in the `object_id`, so for a t-shirt that is red, you would need SKU level as the `object_id`.",
              "examples": ["XYZ-12345", "ISBN 0-061-96436-0", "123"],
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]            
            },
            "internal_id": {
              "description": "A unique id that the search engine can use to internally to index the object.  For example, in OpenSearch, think the `_id` field in the indices.",
              "examples": ["1", "123456"],
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]             
            }            
          }          
        },        
        "position": {
          "description": "structure that contains information on the location of the event origin, such as screen x,y coordinates, or the nth object out of 10 results.",
          "type": "object",
          "additionalProperties": true,
          "$comment": "TBD: Should we define the various flavours of positioning information?"
        },
        "properties": {
          "description": "Structure which contains additional data tracked with the event.",
          "type": "object",
          "additionalProperties": true
        }      
      }
    }
  }
}
